/* styles for disabled checkboxes*/
:root {
  --form-control-disabled: #959495;
}

input[type="checkbox"]:disabled {
  --form-control-color: var(--form-control-disabled);

  color: var(--form-control-disabled);
  cursor: not-allowed;
}

/*Styles for other input type checkbox*/
input[type="checkbox"] {
  appearance: none;
  background-color: #fff;
  margin: 0;
  font: inherit;
  color: currentColor;
  width: 1.15em;
  height: 1.15em;
  border: 0.15em solid currentColor;
  border-radius: 0.15em;
  transform: translateY(-0.075em);
  display: grid;
  place-content: center;
}

/*
- This is the quickest way to align the :before to the horizontal and vertical center of your custom control.

- It's now time to bring in our ::before pseudo element which will be styled in order to represent the :checked state. I create the :before element, including a transition and using transform hide it with scale(0):
*/

input[type="checkbox"]::before {
  content: "";
  width: 0.65em;
  height: 0.65em;
  transform: scale(0);
  transition: 120ms transform ease-in-out;
  box-shadow: inset 1em 1em var(--form-control-color);
  /* Windows High Contrast Mode */
  background-color: CanvasText;

  /*Creating the "Checkmark" Shape*/
  transform-origin: bottom left;
  clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
}

input[type="checkbox"]:checked::before {
  transform: scale(1);
}
/*The focus state*/
input[type="checkbox"]:focus {
  outline: max(2px, 0.15em) solid currentColor;
  outline-offset: max(2px, 0.15em);
}


.form-control + .form-control {
  margin-top: 1em;
}

/*Disabled state styles*/
.form-control--disabled {
  color: var(--form-control-disabled);
  cursor: not-allowed;
}